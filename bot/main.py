from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv
import os
import pandas as pd

from bot.trend_storage import save_trend
from viz.trend_map import analyze_and_visualize_trends

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–¥", "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–¥–∞—Ä–Ω—É—é –∫–∞—Ä—Ç—É"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ç—Ä–µ–Ω–¥ –≤—Ä—É—á–Ω—É—é üëá",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip().lower()

    if user_input == "—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–¥–∞—Ä–Ω—É—é –∫–∞—Ä—Ç—É":
        trends_path = "data/trends.csv"
        if not os.path.exists(trends_path):
            await update.message.reply_text("–§–∞–π–ª —Å —Ç—Ä–µ–Ω–¥–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢")
            return

        df = pd.read_csv(trends_path, header=None, names=["timestamp", "user_id", "trend"])
        if df.empty:
            await update.message.reply_text("–¢—Ä–µ–Ω–¥—ã –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã üò¢")
            return

        terms = df["trend"].dropna().tolist()
        image_path = analyze_and_visualize_trends(terms)

        if os.path.exists(image_path):
            await update.message.reply_photo(photo=open(image_path, "rb"))
        else:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É üò¢")
        return

    if user_input == "–¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–¥":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–Ω–¥, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å:")
        return

    # –ò–Ω–∞—á–µ ‚Äî –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ —Ç—Ä–µ–Ω–¥
    save_trend(user_input, user_id=update.effective_user.id)
    await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ! –Ø –∑–∞–ø–∏—Å–∞–ª —Ç—Ä–µ–Ω–¥: {user_input}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
